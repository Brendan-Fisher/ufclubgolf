[{"C:\\Users\\Aditya Nair\\Desktop\\ufclubgolf\\frontend\\src\\index.js":"1","C:\\Users\\Aditya Nair\\Desktop\\ufclubgolf\\frontend\\src\\App.js":"2","C:\\Users\\Aditya Nair\\Desktop\\ufclubgolf\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\Aditya Nair\\Desktop\\ufclubgolf\\frontend\\src\\redux\\store.js":"4","C:\\Users\\Aditya Nair\\Desktop\\ufclubgolf\\frontend\\src\\utils\\setAuthToken.js":"5","C:\\Users\\Aditya Nair\\Desktop\\ufclubgolf\\frontend\\src\\components\\Landing.js":"6","C:\\Users\\Aditya Nair\\Desktop\\ufclubgolf\\frontend\\src\\components\\Calendar.js":"7","C:\\Users\\Aditya Nair\\Desktop\\ufclubgolf\\frontend\\src\\components\\Tournaments.js":"8","C:\\Users\\Aditya Nair\\Desktop\\ufclubgolf\\frontend\\src\\components\\About.js":"9","C:\\Users\\Aditya Nair\\Desktop\\ufclubgolf\\frontend\\src\\components\\Events.js":"10","C:\\Users\\Aditya Nair\\Desktop\\ufclubgolf\\frontend\\src\\components\\ExecDash.js":"11","C:\\Users\\Aditya Nair\\Desktop\\ufclubgolf\\frontend\\src\\redux\\actions\\authActions.js":"12","C:\\Users\\Aditya Nair\\Desktop\\ufclubgolf\\frontend\\src\\components\\AdminDash.js":"13","C:\\Users\\Aditya Nair\\Desktop\\ufclubgolf\\frontend\\src\\components\\MemberDash.js":"14","C:\\Users\\Aditya Nair\\Desktop\\ufclubgolf\\frontend\\src\\components\\auth\\Login.js":"15","C:\\Users\\Aditya Nair\\Desktop\\ufclubgolf\\frontend\\src\\components\\auth\\Register.js":"16","C:\\Users\\Aditya Nair\\Desktop\\ufclubgolf\\frontend\\src\\components\\private-route\\PrivateRoute.js":"17","C:\\Users\\Aditya Nair\\Desktop\\ufclubgolf\\frontend\\src\\components\\Navbar.js":"18","C:\\Users\\Aditya Nair\\Desktop\\ufclubgolf\\frontend\\src\\redux\\actions\\types.js":"19","C:\\Users\\Aditya Nair\\Desktop\\ufclubgolf\\frontend\\src\\redux\\actions\\userActions.js":"20","C:\\Users\\Aditya Nair\\Desktop\\ufclubgolf\\frontend\\src\\components\\features\\ImageSlider.js":"21","C:\\Users\\Aditya Nair\\Desktop\\ufclubgolf\\frontend\\src\\components\\features\\MemberList.js":"22","C:\\Users\\Aditya Nair\\Desktop\\ufclubgolf\\frontend\\src\\redux\\reducers\\index.js":"23","C:\\Users\\Aditya Nair\\Desktop\\ufclubgolf\\frontend\\src\\redux\\reducers\\authReducer.js":"24","C:\\Users\\Aditya Nair\\Desktop\\ufclubgolf\\frontend\\src\\redux\\reducers\\userReducer.js":"25","C:\\Users\\Aditya Nair\\Desktop\\ufclubgolf\\frontend\\src\\redux\\reducers\\errorReducer.js":"26"},{"size":611,"mtime":1615739600064,"results":"27","hashOfConfig":"28"},{"size":2544,"mtime":1615739600055,"results":"29","hashOfConfig":"28"},{"size":375,"mtime":1614718565522,"results":"30","hashOfConfig":"28"},{"size":445,"mtime":1614718565521,"results":"31","hashOfConfig":"28"},{"size":364,"mtime":1614718565524,"results":"32","hashOfConfig":"28"},{"size":6009,"mtime":1617636919861,"results":"33","hashOfConfig":"28"},{"size":712,"mtime":1617035567183,"results":"34","hashOfConfig":"28"},{"size":728,"mtime":1617035567192,"results":"35","hashOfConfig":"28"},{"size":2611,"mtime":1617051145424,"results":"36","hashOfConfig":"28"},{"size":718,"mtime":1617035567184,"results":"37","hashOfConfig":"28"},{"size":1580,"mtime":1617035567186,"results":"38","hashOfConfig":"28"},{"size":1834,"mtime":1615739600065,"results":"39","hashOfConfig":"28"},{"size":2189,"mtime":1617035567181,"results":"40","hashOfConfig":"28"},{"size":1634,"mtime":1617035567190,"results":"41","hashOfConfig":"28"},{"size":6560,"mtime":1617639776751,"results":"42","hashOfConfig":"28"},{"size":8112,"mtime":1617640643511,"results":"43","hashOfConfig":"28"},{"size":948,"mtime":1614718565511,"results":"44","hashOfConfig":"28"},{"size":7600,"mtime":1617641086121,"results":"45","hashOfConfig":"28"},{"size":186,"mtime":1615739600066,"results":"46","hashOfConfig":"28"},{"size":1555,"mtime":1617035567408,"results":"47","hashOfConfig":"28"},{"size":3604,"mtime":1617121401667,"results":"48","hashOfConfig":"28"},{"size":2300,"mtime":1617035567200,"results":"49","hashOfConfig":"28"},{"size":281,"mtime":1615739600071,"results":"50","hashOfConfig":"28"},{"size":677,"mtime":1615739600069,"results":"51","hashOfConfig":"28"},{"size":365,"mtime":1615739600072,"results":"52","hashOfConfig":"28"},{"size":365,"mtime":1617035567411,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1xwo7xj",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"C:\\Users\\Aditya Nair\\Desktop\\ufclubgolf\\frontend\\src\\index.js",[],["109","110"],"C:\\Users\\Aditya Nair\\Desktop\\ufclubgolf\\frontend\\src\\App.js",[],"C:\\Users\\Aditya Nair\\Desktop\\ufclubgolf\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Aditya Nair\\Desktop\\ufclubgolf\\frontend\\src\\redux\\store.js",[],"C:\\Users\\Aditya Nair\\Desktop\\ufclubgolf\\frontend\\src\\utils\\setAuthToken.js",[],"C:\\Users\\Aditya Nair\\Desktop\\ufclubgolf\\frontend\\src\\components\\Landing.js",[],"C:\\Users\\Aditya Nair\\Desktop\\ufclubgolf\\frontend\\src\\components\\Calendar.js",[],"C:\\Users\\Aditya Nair\\Desktop\\ufclubgolf\\frontend\\src\\components\\Tournaments.js",[],"C:\\Users\\Aditya Nair\\Desktop\\ufclubgolf\\frontend\\src\\components\\About.js",[],"C:\\Users\\Aditya Nair\\Desktop\\ufclubgolf\\frontend\\src\\components\\Events.js",[],"C:\\Users\\Aditya Nair\\Desktop\\ufclubgolf\\frontend\\src\\components\\ExecDash.js",[],"C:\\Users\\Aditya Nair\\Desktop\\ufclubgolf\\frontend\\src\\redux\\actions\\authActions.js",[],"C:\\Users\\Aditya Nair\\Desktop\\ufclubgolf\\frontend\\src\\components\\AdminDash.js",[],"C:\\Users\\Aditya Nair\\Desktop\\ufclubgolf\\frontend\\src\\components\\MemberDash.js",[],"C:\\Users\\Aditya Nair\\Desktop\\ufclubgolf\\frontend\\src\\components\\auth\\Login.js",["111"],"import '../styles/Navbar.css'\r\nimport React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginMember } from \"../../redux/actions/authActions\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Login extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n        email: \"\",\r\n        password: \"\",\r\n        memberType: \"\",\r\n        errors: {}\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        // If logged in user navigates to Login page, redirect to dashboard\r\n        if (this.props.auth.isAuthenticated) {\r\n            this.props.history.push(\"/dashboard/\" + this.props.auth.memberType);\r\n        }\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state){\r\n        if (props.auth.isAuthenticated) {\r\n            let memType = props.auth.memberType;\r\n\r\n            if (memType === \"admin\") {\r\n                props.history.push(\"/dashboard/admin\"); // Push user to dashboard when they log in\r\n            }\r\n            else if (memType === \"exec\"){\r\n                props.history.push(\"/dashboard/exec\"); // Push user to dashboard when they log in\r\n            }\r\n            else props.history.push(\"/\"); // Push user to homepage when they log in\r\n        }\r\n\r\n        if (props.errors) {\r\n            return {\r\n                errors: props.errors\r\n            }\r\n        }\r\n        else return null;\r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState({ [e.target.id]: e.target.value });\r\n    };\r\n    \r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n        const memberData = {\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n        };\r\n        // Since we handle the redirect within our component, we don't need to pass in this.props.history as a parameter\r\n        this.props.loginMember(memberData); \r\n    };\r\n\r\n    render() {\r\n        const { errors } = this.state;\r\n\r\n        return(\r\n            <div id=\"container\" className=\"container\">\r\n                <div id=\"content\" style={{ marginTop: \"4rem\" }} className=\"row\">\r\n                    <div className=\"flexbox\">\r\n                        <div id=\"box\" className=\"col s10 m8 l8 offset-s1 offset-m2 offset-l2\">\r\n                            <Link to=\"/\" className=\"btn-flat waves-effect\">\r\n                                <i className=\"material-icons left\">keyboard_backspace</i> \r\n                                <text id=\"pass2\">Back to home</text>\r\n                            </Link>\r\n                            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n                                <h4>\r\n                                    <b>Log in</b> below\r\n                                </h4>\r\n                                <p className=\"grey-text text-darken-1\">\r\n                                    Don't have an account? <Link to=\"/register\">\r\n                                    <a><text id=\"pass4\">Register</text></a></Link>\r\n                                </p>\r\n                            </div>\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"input-field col s12\">\r\n                                    <input\r\n                                        onChange={this.onChange}\r\n                                        value={this.state.email}\r\n                                        error={errors.email}\r\n                                        id=\"email\"\r\n                                        type=\"email\"\r\n                                        className={classnames(\"\", {\r\n                                            invalid: errors.email || errors.emailnotfound\r\n                                        })}\r\n                                    />\r\n                                    <label htmlFor=\"email\">Email</label>\r\n                                    <span className=\"red-text\">\r\n                                        {errors.email}\r\n                                        {errors.emailnotfound}\r\n                                    </span>\r\n                                </div>\r\n                                <div className=\"input-field col s12\">\r\n                                    <input\r\n                                        onChange={this.onChange}\r\n                                        value={this.state.password}\r\n                                        error={errors.password}\r\n                                        id=\"password\"\r\n                                        type=\"password\"\r\n                                        className={classnames(\"\", {\r\n                                            invalid: errors.password || errors.passwordincorrect\r\n                                        })}\r\n                                    />\r\n                                    <label htmlFor=\"password\">Password</label>\r\n                                    <span className=\"red-text\">\r\n                                        {errors.password}\r\n                                        {errors.passwordincorrect}\r\n                                    </span>\r\n                                </div>\r\n                                <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n                                    <button\r\n                                        style={{\r\n                                            width: \"75px\",\r\n                                            borderRadius: \"3px\",\r\n                                            letterSpacing: \"1.5px\",\r\n                                            margin: \"11.250px\"\r\n                                        }}\r\n                                        type=\"submit\"\r\n                                        className=\"btn btn-medium waves-effect waves-green hoverable blue accent-3\" \r\n                                    >\r\n                                        <text class=\"join\" id=\"pass3\">Log in</text>\r\n                                    </button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nLogin.propTypes = {\r\n    loginMember: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    errors: state.errors\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { loginMember }\r\n)(Login);","C:\\Users\\Aditya Nair\\Desktop\\ufclubgolf\\frontend\\src\\components\\auth\\Register.js",["112","113","114","115"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { registerMember, loginMember } from \"../../redux/actions/authActions\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Register extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n        name: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        password2: \"\",\r\n        errors: {}\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        // If logged in and user navigates to Register page, redirect to dashboard\r\n        if (this.props.auth.isAuthenticated) {\r\n            this.props.history.push(\"/dashboard/\" + this.props.auth.memberType);\r\n        }\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.auth.isAuthenticated) {\r\n            let memType = props.auth.memberType;\r\n\r\n            if (memType === \"admin\") {\r\n                props.history.push(\"/dashboard/admin\"); // Push user to dashboard when they log in\r\n            }\r\n            else if (memType === \"exec\"){\r\n                props.history.push(\"/dashboard/exec\"); // Push user to dashboard when they log in\r\n            }\r\n            else props.history.push(\"/\"); // Push user to home page when they log in\r\n        }\r\n\r\n        if (props.errors) {\r\n            return {\r\n                errors: props.errors\r\n            }\r\n        }\r\n        else return null;\r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState({ [e.target.id]: e.target.value });\r\n    };\r\n\r\n    guestLogin = e => {\r\n        e.preventDefault();\r\n        const memberData = {\r\n            email: \"guest@guest.com\",\r\n            password: \"guest123\",\r\n        };\r\n        // Since we handle the redirect within our component, we don't need to pass in this.props.history as a parameter\r\n        this.props.loginMember(memberData); \r\n    }\r\n\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n        const newMember = {\r\n            name: this.state.name,\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n            password2: this.state.password2\r\n        };\r\n        this.props.registerMember(newMember, this.props.history);\r\n    };\r\n\r\n    render() {\r\n        const { errors } = this.state;\r\n\r\n        return (\r\n            <div id=\"container\"  className=\"container\">\r\n                <div id=\"content\" style={{ marginTop: \"4rem\"}} className=\"row\">\r\n                    <div className=\"flexbox\">\r\n                        <div id=\"box\" className=\"col s10 m8 l8 offset-s1 offset-m2 offset-l2\">\r\n                            <Link to=\"/\" className=\"btn-flat waves-effect\">\r\n                                <i className=\"material-icons left\">keyboard_backspace</i> \r\n                                <a><text id=\"pass2\">Back to home</text></a>\r\n                            </Link>\r\n\r\n                            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\"} }>\r\n                                <h4><b>Register</b> below</h4>\r\n                                <p className=\"grey-text text-darken-1\">\r\n                                    Already have an account? <Link to=\"/login\">\r\n                                    <a><text id=\"pass4\">Log In</text></a></Link>\r\n                                    <br></br>\r\n                                    Or <Link to=\"/\" onClick={this.guestLogin}>\r\n                                    <a><text id=\"pass4\">Continune As Guest</text></a></Link>\r\n                                </p>\r\n                            </div>\r\n\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"input-field col s12\">\r\n                                    <input  \r\n                                        onChange={this.onChange}\r\n                                        value={this.state.name}\r\n                                        error={errors.name}\r\n                                        id=\"name\"\r\n                                        type=\"text\"\r\n                                        className={classnames(\"\",{ invalid: errors.name })}\r\n                                    />\r\n                                    <label htmlFor=\"name\">Full Name</label>\r\n                                    <span className=\"red-text\">{errors.name}</span>\r\n                                </div>\r\n                                <div className=\"input-field col s12\">\r\n                                    <input\r\n                                    onChange={this.onChange}\r\n                                    value={this.state.email}\r\n                                    error={errors.email}\r\n                                    id=\"email\"\r\n                                    type=\"email\"\r\n                                    className={classnames(\"\",{ invalid: errors.email })}\r\n                                    />\r\n                                    <label htmlFor=\"email\">Email</label>\r\n                                    <span className=\"red-text\">{errors.email}</span>\r\n                                </div>\r\n                                <div className=\"input-field col s12\">\r\n                                    <input\r\n                                    onChange={this.onChange}\r\n                                    value={this.state.password}\r\n                                    error={errors.password}\r\n                                    id=\"password\"\r\n                                    type=\"password\"\r\n                                    className={classnames(\"\",{ invalid: errors.password })}\r\n                                    />\r\n                                    <label htmlFor=\"password\">Password</label>\r\n                                    <span className=\"red-text\">{errors.password}</span>\r\n                                </div>\r\n                                <div className=\"input-field col s12\">\r\n                                    <input\r\n                                    onChange={this.onChange}\r\n                                    value={this.state.password2}\r\n                                    error={errors.password2}\r\n                                    id=\"password2\"\r\n                                    type=\"password\"\r\n                                    className={classnames(\"\",{ invalid: errors.password2 })}\r\n                                    />\r\n                                    <label htmlFor=\"password2\">Confirm Password</label>\r\n                                    <span className=\"red-text\">{errors.password2}</span>\r\n                                </div>\r\n                                <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n                                    <button\r\n                                        style={{\r\n                                            width: \"75px\",\r\n                                            borderRadius: \"3px\",\r\n                                            letterSpacing: \"1.5px\",\r\n                                            margin: \"11.250px\",\r\n                                        }}\r\n                                        type=\"submit\"\r\n                                        className=\"btn btn-medium waves-effect waves-green hoverable blue accent-3\"\r\n                                    >\r\n                                        <text id=\"location\" class=\"join\" id=\"pass3\">Sign Up</text>\r\n                                    </button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nRegister.propTypes = {\r\n    registerMember: PropTypes.func.isRequired,\r\n    loginMember: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { registerMember, loginMember }\r\n)(withRouter(Register));","C:\\Users\\Aditya Nair\\Desktop\\ufclubgolf\\frontend\\src\\components\\private-route\\PrivateRoute.js",[],"C:\\Users\\Aditya Nair\\Desktop\\ufclubgolf\\frontend\\src\\components\\Navbar.js",[],"C:\\Users\\Aditya Nair\\Desktop\\ufclubgolf\\frontend\\src\\redux\\actions\\types.js",[],"C:\\Users\\Aditya Nair\\Desktop\\ufclubgolf\\frontend\\src\\redux\\actions\\userActions.js",[],"C:\\Users\\Aditya Nair\\Desktop\\ufclubgolf\\frontend\\src\\components\\features\\ImageSlider.js",[],"C:\\Users\\Aditya Nair\\Desktop\\ufclubgolf\\frontend\\src\\components\\features\\MemberList.js",[],"C:\\Users\\Aditya Nair\\Desktop\\ufclubgolf\\frontend\\src\\redux\\reducers\\index.js",[],"C:\\Users\\Aditya Nair\\Desktop\\ufclubgolf\\frontend\\src\\redux\\reducers\\authReducer.js",[],"C:\\Users\\Aditya Nair\\Desktop\\ufclubgolf\\frontend\\src\\redux\\reducers\\userReducer.js",[],"C:\\Users\\Aditya Nair\\Desktop\\ufclubgolf\\frontend\\src\\redux\\reducers\\errorReducer.js",[],{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","severity":1,"message":"121","line":80,"column":37,"nodeType":"122","endLine":80,"endColumn":40},{"ruleId":"120","severity":1,"message":"121","line":83,"column":33,"nodeType":"122","endLine":83,"endColumn":36},{"ruleId":"120","severity":1,"message":"121","line":90,"column":37,"nodeType":"122","endLine":90,"endColumn":40},{"ruleId":"120","severity":1,"message":"121","line":93,"column":37,"nodeType":"122","endLine":93,"endColumn":40},{"ruleId":"123","severity":1,"message":"124","line":157,"column":74,"nodeType":"125","endLine":157,"endColumn":84},"no-native-reassign",["126"],"no-negated-in-lhs",["127"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation"]